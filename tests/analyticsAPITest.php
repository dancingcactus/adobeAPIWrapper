<?php
require("./analyticsAPI.php");
require("./credentials.inc");
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-03 at 12:23:46.
 * @package AdobeAPI
 * @subpackage apiUnitTests
 * @author Justin Grover
 */
class analyticsAPITest extends PHPUnit_Framework_TestCase
{
    /**
     * @var analyticsAPI
     */
    protected $api;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->api = new analyticsAPI();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    	unset($this->api); 
    }


    /**
     * @covers analyticsAPI::getUsername
     */
    public function testGetUsername()
    {
		$this->api->setUsername($GLOBALS['username']);
		$this->assertEquals($GLOBALS['username'], $this->api->getUsername());
			
    }

    /**
     * @covers analyticsAPI::getPassword
     */
    public function testGetPassword()
    {
		$this->api->setPassword($GLOBALS['password']);
		$this->assertEquals($GLOBALS['password'], $this->api->getPassword());
    }

    /**
     * @covers analyticsAPI::config
     */
    public function testConfig()
    {
       $this->api->config($GLOBALS['username'], $GLOBALS['password']);
       $this->assertEquals($GLOBALS['username'],$this->api->getUsername());
       $this->assertEquals($GLOBALS['password'],$this->api->getPassword());
       $this->assertFalse($this->api->config("invalid:Invalid Company",$GLOBALS['password']));
    }

    /**
     * @covers analyticsAPI::invoke
     */
    public function testInvoke()
    {
    	$this->api->config($GLOBALS['username'], $GLOBALS['password']);
        $res = $this->api->invoke("Company.GetReportSuites", array());
        $this->assertInternalType('string',$res);
        $this->assertNotContains("error",$res);
        
        //test a bad method
        $res2 = $this->api->invoke("Company.GetReportSuite", array());
        $this->assertContains("error", $res2);
    }
}
